<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.bps.heam.mapper.AreaMapper">
  <resultMap id="BaseResultMap" type="cn.bps.heam.domain.model.Area">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="code" jdbcType="CHAR" property="code" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="parent_id" jdbcType="CHAR" property="parentId" />
    <result column="short_name" jdbcType="VARCHAR" property="shortName" />
    <result column="level_type" jdbcType="BIT" property="levelType" />
    <result column="city_code" jdbcType="VARCHAR" property="cityCode" />
    <result column="zip_code" jdbcType="CHAR" property="zipCode" />
    <result column="merge_name" jdbcType="VARCHAR" property="mergeName" />
    <result column="ing" jdbcType="VARCHAR" property="ing" />
    <result column="lat" jdbcType="VARCHAR" property="lat" />
    <result column="pinyin" jdbcType="VARCHAR" property="pinyin" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, code, name, parent_id, short_name, level_type, city_code, zip_code, merge_name, 
    ing, lat, pinyin
  </sql>
  <select id="selectByExample" parameterType="cn.bps.heam.domain.model.AreaExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from area
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from area
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from area
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.bps.heam.domain.model.AreaExample">
    delete from area
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.bps.heam.domain.model.Area">
    insert into area (id, code, name, 
      parent_id, short_name, level_type, 
      city_code, zip_code, merge_name, 
      ing, lat, pinyin)
    values (#{id,jdbcType=INTEGER}, #{code,jdbcType=CHAR}, #{name,jdbcType=VARCHAR}, 
      #{parentId,jdbcType=CHAR}, #{shortName,jdbcType=VARCHAR}, #{levelType,jdbcType=BIT}, 
      #{cityCode,jdbcType=VARCHAR}, #{zipCode,jdbcType=CHAR}, #{mergeName,jdbcType=VARCHAR}, 
      #{ing,jdbcType=VARCHAR}, #{lat,jdbcType=VARCHAR}, #{pinyin,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.bps.heam.domain.model.Area">
    insert into area
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="shortName != null">
        short_name,
      </if>
      <if test="levelType != null">
        level_type,
      </if>
      <if test="cityCode != null">
        city_code,
      </if>
      <if test="zipCode != null">
        zip_code,
      </if>
      <if test="mergeName != null">
        merge_name,
      </if>
      <if test="ing != null">
        ing,
      </if>
      <if test="lat != null">
        lat,
      </if>
      <if test="pinyin != null">
        pinyin,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        #{code,jdbcType=CHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=CHAR},
      </if>
      <if test="shortName != null">
        #{shortName,jdbcType=VARCHAR},
      </if>
      <if test="levelType != null">
        #{levelType,jdbcType=BIT},
      </if>
      <if test="cityCode != null">
        #{cityCode,jdbcType=VARCHAR},
      </if>
      <if test="zipCode != null">
        #{zipCode,jdbcType=CHAR},
      </if>
      <if test="mergeName != null">
        #{mergeName,jdbcType=VARCHAR},
      </if>
      <if test="ing != null">
        #{ing,jdbcType=VARCHAR},
      </if>
      <if test="lat != null">
        #{lat,jdbcType=VARCHAR},
      </if>
      <if test="pinyin != null">
        #{pinyin,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.bps.heam.domain.model.AreaExample" resultType="java.lang.Long">
    select count(*) from area
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update area
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=CHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=CHAR},
      </if>
      <if test="record.shortName != null">
        short_name = #{record.shortName,jdbcType=VARCHAR},
      </if>
      <if test="record.levelType != null">
        level_type = #{record.levelType,jdbcType=BIT},
      </if>
      <if test="record.cityCode != null">
        city_code = #{record.cityCode,jdbcType=VARCHAR},
      </if>
      <if test="record.zipCode != null">
        zip_code = #{record.zipCode,jdbcType=CHAR},
      </if>
      <if test="record.mergeName != null">
        merge_name = #{record.mergeName,jdbcType=VARCHAR},
      </if>
      <if test="record.ing != null">
        ing = #{record.ing,jdbcType=VARCHAR},
      </if>
      <if test="record.lat != null">
        lat = #{record.lat,jdbcType=VARCHAR},
      </if>
      <if test="record.pinyin != null">
        pinyin = #{record.pinyin,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update area
    set id = #{record.id,jdbcType=INTEGER},
      code = #{record.code,jdbcType=CHAR},
      name = #{record.name,jdbcType=VARCHAR},
      parent_id = #{record.parentId,jdbcType=CHAR},
      short_name = #{record.shortName,jdbcType=VARCHAR},
      level_type = #{record.levelType,jdbcType=BIT},
      city_code = #{record.cityCode,jdbcType=VARCHAR},
      zip_code = #{record.zipCode,jdbcType=CHAR},
      merge_name = #{record.mergeName,jdbcType=VARCHAR},
      ing = #{record.ing,jdbcType=VARCHAR},
      lat = #{record.lat,jdbcType=VARCHAR},
      pinyin = #{record.pinyin,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.bps.heam.domain.model.Area">
    update area
    <set>
      <if test="code != null">
        code = #{code,jdbcType=CHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=CHAR},
      </if>
      <if test="shortName != null">
        short_name = #{shortName,jdbcType=VARCHAR},
      </if>
      <if test="levelType != null">
        level_type = #{levelType,jdbcType=BIT},
      </if>
      <if test="cityCode != null">
        city_code = #{cityCode,jdbcType=VARCHAR},
      </if>
      <if test="zipCode != null">
        zip_code = #{zipCode,jdbcType=CHAR},
      </if>
      <if test="mergeName != null">
        merge_name = #{mergeName,jdbcType=VARCHAR},
      </if>
      <if test="ing != null">
        ing = #{ing,jdbcType=VARCHAR},
      </if>
      <if test="lat != null">
        lat = #{lat,jdbcType=VARCHAR},
      </if>
      <if test="pinyin != null">
        pinyin = #{pinyin,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.bps.heam.domain.model.Area">
    update area
    set code = #{code,jdbcType=CHAR},
      name = #{name,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=CHAR},
      short_name = #{shortName,jdbcType=VARCHAR},
      level_type = #{levelType,jdbcType=BIT},
      city_code = #{cityCode,jdbcType=VARCHAR},
      zip_code = #{zipCode,jdbcType=CHAR},
      merge_name = #{mergeName,jdbcType=VARCHAR},
      ing = #{ing,jdbcType=VARCHAR},
      lat = #{lat,jdbcType=VARCHAR},
      pinyin = #{pinyin,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>